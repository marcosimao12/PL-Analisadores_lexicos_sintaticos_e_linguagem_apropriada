
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left+-left*/rightUMINUSaleatorio colon comma comment concat const divide entrada equals escrever fim fold funcao lbracket lparen map minus num plus programa rbracket rparen semicolon string times var varidlista_declaracoes : declaracao\n                             | lista_declaracoes declaracaodeclaracao : declaracao_atribuicao\n                      | declaracao_expressao\n                      | declaracao_funcao\n                      | declaracao_escrever\n                      | declaracao_comentario\n                      | declaracao_multiplas_atribuicoesdeclaracao_atribuicao : varid '=' expressao ';'declaracao_expressao : expressao ';'declaracao_funcao : funcao varid '(' parametros ')' ':' lista_declaracoes fim\n                             | funcao varid '(' parametros ')' ',' ':' expressao ';'declaracao_escrever : escrever '(' expressao ')' ';'declaracao_comentario : commentdeclaracao_multiplas_atribuicoes : lista_atribuicoes ';'lista_atribuicoes : atribuicao\n                             | lista_atribuicoes ',' atribuicaoatribuicao : varid '=' expressaolista_expressoes : expressao\n                            | lista_expressoes ',' expressaoexpressao : expressao concat expressaoexpressao : expressao '+' expressaoexpressao : expressao '-' expressaoexpressao : expressao '*' expressaoexpressao : expressao '/' expressaoexpressao : '(' expressao ')'expressao : '-' expressao %prec UMINUSexpressao : varidexpressao : numexpressao : stringexpressao : '[' lista_expressoes ']'expressao : varid '(' lista_expressoes ')'parametros : varid\n                      | parametros ',' varid"
    
_lr_action_items = {'varid':([0,1,2,3,4,5,6,7,8,11,12,14,16,19,21,22,23,24,25,26,27,28,29,33,34,35,46,52,53,58,61,62,64,67,68,69,71,],[9,9,-1,-3,-4,-5,-6,-7,-8,30,32,-14,32,32,-2,32,32,-10,32,32,32,32,32,32,-15,50,55,32,-9,32,66,-13,9,9,32,-11,-12,]),'funcao':([0,1,2,3,4,5,6,7,8,14,21,24,34,53,62,64,67,69,71,],[11,11,-1,-3,-4,-5,-6,-7,-8,-14,-2,-10,-15,-9,-13,11,11,-11,-12,]),'escrever':([0,1,2,3,4,5,6,7,8,14,21,24,34,53,62,64,67,69,71,],[13,13,-1,-3,-4,-5,-6,-7,-8,-14,-2,-10,-15,-9,-13,13,13,-11,-12,]),'comment':([0,1,2,3,4,5,6,7,8,14,21,24,34,53,62,64,67,69,71,],[14,14,-1,-3,-4,-5,-6,-7,-8,-14,-2,-10,-15,-9,-13,14,14,-11,-12,]),'(':([0,1,2,3,4,5,6,7,8,9,12,13,14,16,19,21,22,23,24,25,26,27,28,29,30,32,33,34,52,53,58,62,64,67,68,69,71,],[12,12,-1,-3,-4,-5,-6,-7,-8,23,12,33,-14,12,12,-2,12,12,-10,12,12,12,12,12,46,23,12,-15,12,-9,12,-13,12,12,12,-11,-12,]),'-':([0,1,2,3,4,5,6,7,8,9,10,12,14,16,17,18,19,21,22,23,24,25,26,27,28,29,31,32,33,34,36,38,39,41,42,43,44,45,47,48,51,52,53,54,58,59,62,63,64,67,68,69,70,71,],[16,16,-1,-3,-4,-5,-6,-7,-8,-28,27,16,-14,16,-29,-30,16,-2,16,16,-10,16,16,16,16,16,27,-28,16,-15,-27,27,27,27,-22,-23,-24,-25,-26,27,-31,16,-9,-32,16,27,-13,27,16,16,16,-11,27,-12,]),'num':([0,1,2,3,4,5,6,7,8,12,14,16,19,21,22,23,24,25,26,27,28,29,33,34,52,53,58,62,64,67,68,69,71,],[17,17,-1,-3,-4,-5,-6,-7,-8,17,-14,17,17,-2,17,17,-10,17,17,17,17,17,17,-15,17,-9,17,-13,17,17,17,-11,-12,]),'string':([0,1,2,3,4,5,6,7,8,12,14,16,19,21,22,23,24,25,26,27,28,29,33,34,52,53,58,62,64,67,68,69,71,],[18,18,-1,-3,-4,-5,-6,-7,-8,18,-14,18,18,-2,18,18,-10,18,18,18,18,18,18,-15,18,-9,18,-13,18,18,18,-11,-12,]),'[':([0,1,2,3,4,5,6,7,8,12,14,16,19,21,22,23,24,25,26,27,28,29,33,34,52,53,58,62,64,67,68,69,71,],[19,19,-1,-3,-4,-5,-6,-7,-8,19,-14,19,19,-2,19,19,-10,19,19,19,19,19,19,-15,19,-9,19,-13,19,19,19,-11,-12,]),'$end':([1,2,3,4,5,6,7,8,14,21,24,34,53,62,69,71,],[0,-1,-3,-4,-5,-6,-7,-8,-14,-2,-10,-15,-9,-13,-11,-12,]),'fim':([2,3,4,5,6,7,8,14,21,24,34,53,62,67,69,71,],[-1,-3,-4,-5,-6,-7,-8,-14,-2,-10,-15,-9,-13,69,-11,-12,]),'=':([9,50,],[22,58,]),';':([9,10,15,17,18,20,32,36,39,41,42,43,44,45,47,49,51,54,57,63,70,],[-28,24,34,-29,-30,-16,-28,-27,53,-21,-22,-23,-24,-25,-26,-17,-31,-32,62,-18,71,]),'concat':([9,10,17,18,31,32,36,38,39,41,42,43,44,45,47,48,51,54,59,63,70,],[-28,25,-29,-30,25,-28,-27,25,25,25,-22,-23,-24,-25,-26,25,-31,-32,25,25,25,]),'+':([9,10,17,18,31,32,36,38,39,41,42,43,44,45,47,48,51,54,59,63,70,],[-28,26,-29,-30,26,-28,-27,26,26,26,-22,-23,-24,-25,-26,26,-31,-32,26,26,26,]),'*':([9,10,17,18,31,32,36,38,39,41,42,43,44,45,47,48,51,54,59,63,70,],[-28,28,-29,-30,28,-28,-27,28,28,28,28,28,-24,-25,-26,28,-31,-32,28,28,28,]),'/':([9,10,17,18,31,32,36,38,39,41,42,43,44,45,47,48,51,54,59,63,70,],[-28,29,-29,-30,29,-28,-27,29,29,29,29,29,-24,-25,-26,29,-31,-32,29,29,29,]),',':([15,17,18,20,32,36,37,38,39,40,41,42,43,44,45,47,49,51,54,55,56,59,60,63,66,],[35,-29,-30,-16,-28,-27,52,-19,-18,52,-21,-22,-23,-24,-25,-26,-17,-31,-32,-33,61,-20,65,-18,-34,]),')':([17,18,31,32,36,38,40,41,42,43,44,45,47,48,51,54,55,56,59,66,],[-29,-30,47,-28,-27,-19,54,-21,-22,-23,-24,-25,-26,57,-31,-32,-33,60,-20,-34,]),']':([17,18,32,36,37,38,41,42,43,44,45,47,51,54,59,],[-29,-30,-28,-27,51,-19,-21,-22,-23,-24,-25,-26,-31,-32,-20,]),':':([60,65,],[64,68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lista_declaracoes':([0,64,],[1,67,]),'declaracao':([0,1,64,67,],[2,21,2,21,]),'declaracao_atribuicao':([0,1,64,67,],[3,3,3,3,]),'declaracao_expressao':([0,1,64,67,],[4,4,4,4,]),'declaracao_funcao':([0,1,64,67,],[5,5,5,5,]),'declaracao_escrever':([0,1,64,67,],[6,6,6,6,]),'declaracao_comentario':([0,1,64,67,],[7,7,7,7,]),'declaracao_multiplas_atribuicoes':([0,1,64,67,],[8,8,8,8,]),'expressao':([0,1,12,16,19,22,23,25,26,27,28,29,33,52,58,64,67,68,],[10,10,31,36,38,39,38,41,42,43,44,45,48,59,63,10,10,70,]),'lista_atribuicoes':([0,1,64,67,],[15,15,15,15,]),'atribuicao':([0,1,35,64,67,],[20,20,49,20,20,]),'lista_expressoes':([19,23,],[37,40,]),'parametros':([46,],[56,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> lista_declaracoes","S'",1,None,None,None),
  ('lista_declaracoes -> declaracao','lista_declaracoes',1,'p_lista_declaracoes','fca_grammar.py',34),
  ('lista_declaracoes -> lista_declaracoes declaracao','lista_declaracoes',2,'p_lista_declaracoes','fca_grammar.py',35),
  ('declaracao -> declaracao_atribuicao','declaracao',1,'p_declaracao','fca_grammar.py',44),
  ('declaracao -> declaracao_expressao','declaracao',1,'p_declaracao','fca_grammar.py',45),
  ('declaracao -> declaracao_funcao','declaracao',1,'p_declaracao','fca_grammar.py',46),
  ('declaracao -> declaracao_escrever','declaracao',1,'p_declaracao','fca_grammar.py',47),
  ('declaracao -> declaracao_comentario','declaracao',1,'p_declaracao','fca_grammar.py',48),
  ('declaracao -> declaracao_multiplas_atribuicoes','declaracao',1,'p_declaracao','fca_grammar.py',49),
  ('declaracao_atribuicao -> varid = expressao ;','declaracao_atribuicao',4,'p_declaracao_atribuicao','fca_grammar.py',54),
  ('declaracao_expressao -> expressao ;','declaracao_expressao',2,'p_declaracao_expressao','fca_grammar.py',59),
  ('declaracao_funcao -> funcao varid ( parametros ) : lista_declaracoes fim','declaracao_funcao',8,'p_declaracao_funcao','fca_grammar.py',64),
  ('declaracao_funcao -> funcao varid ( parametros ) , : expressao ;','declaracao_funcao',9,'p_declaracao_funcao','fca_grammar.py',65),
  ('declaracao_escrever -> escrever ( expressao ) ;','declaracao_escrever',5,'p_declaracao_escrever','fca_grammar.py',73),
  ('declaracao_comentario -> comment','declaracao_comentario',1,'p_declaracao_comentario','fca_grammar.py',78),
  ('declaracao_multiplas_atribuicoes -> lista_atribuicoes ;','declaracao_multiplas_atribuicoes',2,'p_declaracao_multiplas_atribuicoes','fca_grammar.py',83),
  ('lista_atribuicoes -> atribuicao','lista_atribuicoes',1,'p_lista_atribuicoes','fca_grammar.py',88),
  ('lista_atribuicoes -> lista_atribuicoes , atribuicao','lista_atribuicoes',3,'p_lista_atribuicoes','fca_grammar.py',89),
  ('atribuicao -> varid = expressao','atribuicao',3,'p_atribuicao','fca_grammar.py',98),
  ('lista_expressoes -> expressao','lista_expressoes',1,'p_lista_expressoes','fca_grammar.py',103),
  ('lista_expressoes -> lista_expressoes , expressao','lista_expressoes',3,'p_lista_expressoes','fca_grammar.py',104),
  ('expressao -> expressao concat expressao','expressao',3,'p_expressao_concat','fca_grammar.py',113),
  ('expressao -> expressao + expressao','expressao',3,'p_expressao_plus','fca_grammar.py',118),
  ('expressao -> expressao - expressao','expressao',3,'p_expressao_minus','fca_grammar.py',122),
  ('expressao -> expressao * expressao','expressao',3,'p_expressao_times','fca_grammar.py',126),
  ('expressao -> expressao / expressao','expressao',3,'p_expressao_divide','fca_grammar.py',130),
  ('expressao -> ( expressao )','expressao',3,'p_expressao_group','fca_grammar.py',134),
  ('expressao -> - expressao','expressao',2,'p_expressao_uminus','fca_grammar.py',138),
  ('expressao -> varid','expressao',1,'p_expressao_var_id','fca_grammar.py',142),
  ('expressao -> num','expressao',1,'p_expressao_num','fca_grammar.py',146),
  ('expressao -> string','expressao',1,'p_expressao_string','fca_grammar.py',150),
  ('expressao -> [ lista_expressoes ]','expressao',3,'p_expressao_list','fca_grammar.py',154),
  ('expressao -> varid ( lista_expressoes )','expressao',4,'p_expressao_chamada_funcao','fca_grammar.py',159),
  ('parametros -> varid','parametros',1,'p_parametros','fca_grammar.py',164),
  ('parametros -> parametros , varid','parametros',3,'p_parametros','fca_grammar.py',165),
]
