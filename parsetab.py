
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftplusminuslefttimesdividerightUMINUSaleatorio colon comma comment concat const divide entrada equals escrever fim fold funcao lbracket lparen map minus num plus programa rbracket rparen semicolon string times var varidlista_declaracoes : declaracao\n                             | lista_declaracoes declaracaodeclaracao : declaracao_atribuicao\n                      | declaracao_expressao\n                      | declaracao_funcao\n                      | declaracao_escrever\n                      | declaracao_comentariodeclaracao_atribuicao : varid equals expressao ';'declaracao_expressao : expressao ';'declaracao_funcao : funcao varid '(' parametros ')' ',' ':' lista_declaracoes fim\n                             | funcao varid '(' parametros ')' ',' ':' expressao ';'declaracao_escrever : escrever '(' expressao ')' ';'declaracao_comentario : commentlista_expressoes : expressao\n                            | lista_expressoes ',' expressaoexpressao : expressao concat expressaoexpressao : expressao '+' expressao\n                     | expressao '-' expressao\n                     | expressao '*' expressao\n                     | expressao '/' expressao\n                     | '(' expressao ')'\n                     | '-' expressao %prec UMINUS\n                     | varid\n                     | num\n                     | string\n                     | '[' lista_expressoes ']'parametros : varid\n                      | parametros ',' varid"
    
_lr_action_items = {'varid':([0,1,2,3,4,5,6,7,10,11,13,14,17,18,19,20,21,22,23,24,25,29,39,43,44,50,51,54,56,58,59,],[8,8,-1,-3,-4,-5,-6,-7,26,28,-13,28,28,-2,28,-9,28,28,28,28,28,28,45,28,-8,53,-12,55,8,-10,-9,]),'funcao':([0,1,2,3,4,5,6,7,13,18,20,44,51,54,56,58,59,],[10,10,-1,-3,-4,-5,-6,-7,-13,-2,-9,-8,-12,10,10,-10,-9,]),'escrever':([0,1,2,3,4,5,6,7,13,18,20,44,51,54,56,58,59,],[12,12,-1,-3,-4,-5,-6,-7,-13,-2,-9,-8,-12,12,12,-10,-9,]),'comment':([0,1,2,3,4,5,6,7,13,18,20,44,51,54,56,58,59,],[13,13,-1,-3,-4,-5,-6,-7,-13,-2,-9,-8,-12,13,13,-10,-9,]),'(':([0,1,2,3,4,5,6,7,11,12,13,14,17,18,19,20,21,22,23,24,25,26,29,43,44,51,54,56,58,59,],[11,11,-1,-3,-4,-5,-6,-7,11,29,-13,11,11,-2,11,-9,11,11,11,11,11,39,11,11,-8,-12,11,11,-10,-9,]),'-':([0,1,2,3,4,5,6,7,8,9,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,32,33,34,35,36,37,38,40,41,42,43,44,48,51,54,55,56,57,58,59,],[14,14,-1,-3,-4,-5,-6,-7,-23,23,14,-13,14,-24,-25,14,-2,14,-9,14,14,14,14,14,23,-23,14,-22,23,23,23,23,23,23,23,-21,23,-26,14,-8,23,-12,14,-23,14,23,-10,-9,]),'num':([0,1,2,3,4,5,6,7,11,13,14,17,18,19,20,21,22,23,24,25,29,43,44,51,54,56,58,59,],[15,15,-1,-3,-4,-5,-6,-7,15,-13,15,15,-2,15,-9,15,15,15,15,15,15,15,-8,-12,15,15,-10,-9,]),'string':([0,1,2,3,4,5,6,7,11,13,14,17,18,19,20,21,22,23,24,25,29,43,44,51,54,56,58,59,],[16,16,-1,-3,-4,-5,-6,-7,16,-13,16,16,-2,16,-9,16,16,16,16,16,16,16,-8,-12,16,16,-10,-9,]),'[':([0,1,2,3,4,5,6,7,11,13,14,17,18,19,20,21,22,23,24,25,29,43,44,51,54,56,58,59,],[17,17,-1,-3,-4,-5,-6,-7,17,-13,17,17,-2,17,-9,17,17,17,17,17,17,17,-8,-12,17,17,-10,-9,]),'$end':([1,2,3,4,5,6,7,13,18,20,44,51,58,59,],[0,-1,-3,-4,-5,-6,-7,-13,-2,-9,-8,-12,-10,-11,]),'fim':([2,3,4,5,6,7,13,18,20,44,51,56,58,59,],[-1,-3,-4,-5,-6,-7,-13,-2,-9,-8,-12,58,-10,-9,]),'equals':([8,55,],[19,19,]),';':([8,9,15,16,28,30,33,34,35,36,37,38,40,42,47,55,57,],[-23,20,-24,-25,-23,-22,44,-16,-17,-18,-19,-20,-21,-26,51,-23,59,]),'concat':([8,9,15,16,27,28,30,32,33,34,35,36,37,38,40,41,42,48,55,57,],[-23,21,-24,-25,21,-23,-22,21,21,21,21,21,21,21,-21,21,-26,21,-23,21,]),'+':([8,9,15,16,27,28,30,32,33,34,35,36,37,38,40,41,42,48,55,57,],[-23,22,-24,-25,22,-23,-22,22,22,22,22,22,22,22,-21,22,-26,22,-23,22,]),'*':([8,9,15,16,27,28,30,32,33,34,35,36,37,38,40,41,42,48,55,57,],[-23,24,-24,-25,24,-23,-22,24,24,24,24,24,24,24,-21,24,-26,24,-23,24,]),'/':([8,9,15,16,27,28,30,32,33,34,35,36,37,38,40,41,42,48,55,57,],[-23,25,-24,-25,25,-23,-22,25,25,25,25,25,25,25,-21,25,-26,25,-23,25,]),')':([15,16,27,28,30,34,35,36,37,38,40,41,42,45,46,53,],[-24,-25,40,-23,-22,-16,-17,-18,-19,-20,-21,47,-26,-27,49,-28,]),']':([15,16,28,30,31,32,34,35,36,37,38,40,42,48,],[-24,-25,-23,-22,42,-14,-16,-17,-18,-19,-20,-21,-26,-15,]),',':([15,16,28,30,31,32,34,35,36,37,38,40,42,45,46,48,49,53,],[-24,-25,-23,-22,43,-14,-16,-17,-18,-19,-20,-21,-26,-27,50,-15,52,-28,]),':':([52,],[54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lista_declaracoes':([0,54,],[1,56,]),'declaracao':([0,1,54,56,],[2,18,2,18,]),'declaracao_atribuicao':([0,1,54,56,],[3,3,3,3,]),'declaracao_expressao':([0,1,54,56,],[4,4,4,4,]),'declaracao_funcao':([0,1,54,56,],[5,5,5,5,]),'declaracao_escrever':([0,1,54,56,],[6,6,6,6,]),'declaracao_comentario':([0,1,54,56,],[7,7,7,7,]),'expressao':([0,1,11,14,17,19,21,22,23,24,25,29,43,54,56,],[9,9,27,30,32,33,34,35,36,37,38,41,48,57,9,]),'lista_expressoes':([17,],[31,]),'parametros':([39,],[46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> lista_declaracoes","S'",1,None,None,None),
  ('lista_declaracoes -> declaracao','lista_declaracoes',1,'p_lista_declaracoes','fca_grammar.py',34),
  ('lista_declaracoes -> lista_declaracoes declaracao','lista_declaracoes',2,'p_lista_declaracoes','fca_grammar.py',35),
  ('declaracao -> declaracao_atribuicao','declaracao',1,'p_declaracao','fca_grammar.py',44),
  ('declaracao -> declaracao_expressao','declaracao',1,'p_declaracao','fca_grammar.py',45),
  ('declaracao -> declaracao_funcao','declaracao',1,'p_declaracao','fca_grammar.py',46),
  ('declaracao -> declaracao_escrever','declaracao',1,'p_declaracao','fca_grammar.py',47),
  ('declaracao -> declaracao_comentario','declaracao',1,'p_declaracao','fca_grammar.py',48),
  ('declaracao_atribuicao -> varid equals expressao ;','declaracao_atribuicao',4,'p_declaracao_atribuicao','fca_grammar.py',53),
  ('declaracao_expressao -> expressao ;','declaracao_expressao',2,'p_declaracao_expressao','fca_grammar.py',58),
  ('declaracao_funcao -> funcao varid ( parametros ) , : lista_declaracoes fim','declaracao_funcao',9,'p_declaracao_funcao','fca_grammar.py',63),
  ('declaracao_funcao -> funcao varid ( parametros ) , : expressao ;','declaracao_funcao',9,'p_declaracao_funcao','fca_grammar.py',64),
  ('declaracao_escrever -> escrever ( expressao ) ;','declaracao_escrever',5,'p_declaracao_escrever','fca_grammar.py',72),
  ('declaracao_comentario -> comment','declaracao_comentario',1,'p_declaracao_comentario','fca_grammar.py',77),
  ('lista_expressoes -> expressao','lista_expressoes',1,'p_lista_expressoes','fca_grammar.py',82),
  ('lista_expressoes -> lista_expressoes , expressao','lista_expressoes',3,'p_lista_expressoes','fca_grammar.py',83),
  ('expressao -> expressao concat expressao','expressao',3,'p_expressao_concat','fca_grammar.py',90),
  ('expressao -> expressao + expressao','expressao',3,'p_expressao','fca_grammar.py',95),
  ('expressao -> expressao - expressao','expressao',3,'p_expressao','fca_grammar.py',96),
  ('expressao -> expressao * expressao','expressao',3,'p_expressao','fca_grammar.py',97),
  ('expressao -> expressao / expressao','expressao',3,'p_expressao','fca_grammar.py',98),
  ('expressao -> ( expressao )','expressao',3,'p_expressao','fca_grammar.py',99),
  ('expressao -> - expressao','expressao',2,'p_expressao','fca_grammar.py',100),
  ('expressao -> varid','expressao',1,'p_expressao','fca_grammar.py',101),
  ('expressao -> num','expressao',1,'p_expressao','fca_grammar.py',102),
  ('expressao -> string','expressao',1,'p_expressao','fca_grammar.py',103),
  ('expressao -> [ lista_expressoes ]','expressao',3,'p_expressao','fca_grammar.py',104),
  ('parametros -> varid','parametros',1,'p_parametros','fca_grammar.py',130),
  ('parametros -> parametros , varid','parametros',3,'p_parametros','fca_grammar.py',131),
]
